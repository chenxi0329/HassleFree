#200
#1.has to compare with '1' '0', it is not int matrix
#2.dfs, four boundaries checks, and has to check [i][j] before checking around 
class Solution(object):
    def numIslands(self, grid):
        if grid == None or len(grid) == 0 or len(grid[0]) == 0:
            return 0
        
        count = 0
        
        for i in xrange(len(grid)):
            for j in xrange(len(grid[0])):
                if grid[i][j] == '1':
                    self.dfs(grid, i, j)
                    count += 1
        return count
        
    def dfs(self, grid, i, j):
        #bigger or eqaul
        if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]):
            return 
        if grid[i][j] == '1':
            grid[i][j] = '0'
            self.dfs(grid,i-1,j)
            self.dfs(grid,i+1,j)
            self.dfs(grid,i,j-1)
            self.dfs(grid,i,j+1)